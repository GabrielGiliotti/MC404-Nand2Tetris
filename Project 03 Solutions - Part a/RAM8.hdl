// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:

    // DMux for the load input
    DMux8Way(in = load , sel = address, a = al, b = bl, c = cl, d = dl, e = el, f = fl, g = gl, h = hl);
    
    //8 units of 16 bits Registers  
    Register(in = in, load = al, out = out0 );
    Register(in = in, load = bl, out = out1 );
    Register(in = in, load = cl, out = out2 );
    Register(in = in, load = dl, out = out3 );
    Register(in = in, load = el, out = out4 );
    Register(in = in, load = fl, out = out5 );
    Register(in = in, load = gl, out = out6 );
    Register(in = in, load = hl, out = out7 );

    Mux8Way16(a = out0, b = out1, c = out2, d = out3, e = out4, f = out5, g = out6, h = out7, sel = address, out = out );

}